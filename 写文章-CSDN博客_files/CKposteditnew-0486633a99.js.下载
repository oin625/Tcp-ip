var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

setTimeout(function () {
    for (var i = 0; i < window.frames.length; i++) {
        window.frames[i].onerror = csdn.csdnreport.windowErrorHandler;
        window.frames[i].addEventListener('error', csdn.csdnreport.listenerErrorHandler, true);
    }
}, 5000);
$(pageInit);
var shareData = {
    article: 0
};
var xh = null;
var notice = new noticeAlert(true, true);

//全屏操作弹窗
var alertMask = $("div.alert-mask"),
    switchMdMode = $("#switchMdMode");
//全屏提交提示
var fullBtns = $("div.suspension-edit-box").find("button.btn"),
    moreDiv = $("#moreDiv");
var add_article_originalId = '';

function pageInit() {
    if (jsonData.isDeleted) {
        notice.error("该文章已被删除，无法编辑。");
    } else {
        edit_init();
    }
    $('#btnPublish').click(publish);
    $(".btn-publish").click(publish);
    $(".btn-baocun").click(draft);
    $(".btn-shanchu").click(cancelSave);
    function articleInputInit() {
        var selTypeValue = $("#selType").val();
        $(".article-url").hide();
        $(".creativecommons").removeClass("is-show-creativecommons");
        $(".authorize").removeClass("is-show-authorize");
        $(".notice").removeClass("is-show-notice");
        $(".must").removeClass("is-show-must");
        $("label[for='needvip']").css("display", "inline-block");
        switch (selTypeValue) {
            case "2":
                $(".article-url").show();
                $(".creativecommons").eq(1).addClass("is-show-creativecommons");
                $(".authorize").eq(0).addClass("is-show-authorize");
                $(".notice").eq(1).addClass("is-show-notice");
                $(".must").addClass("is-show-must");
                $("label[for='needvip']").css("display", "none");
                if ($("#needvip").is(":checked")) {
                    $("#public").prop('checked', true);
                }
                break;
            case "4":
                $(".article-url").show();
                $(".creativecommons").eq(1).addClass("is-show-creativecommons");
                $(".authorize").eq(1).addClass("is-show-authorize");
                $(".notice").eq(2).addClass("is-show-notice");
                break;
            default:
                $(".creativecommons").eq(0).addClass("is-show-creativecommons");
        }
    }

    articleInputInit();
    $("#selType").change(function () {
        if (this.value == "1") {
            $("#panleCopyright").show();
        } else {
            $("#panleCopyright").hide();
        }
        articleInputInit();
    });
    window.onbeforeunload = function () {
        if (showConfirm) {
            if (CKEDITOR.instances.editor.getData()) {
                try {
                    return "您的文章尚未保存！";
                } catch (err) {}
            }
        }
    };

    $("#imagecode,#seeagain").click(function () {
        checkcodeRefesh();
    });

    var articlepanleid = 0;
}
function setShare(obj) {
    var $config = {
        initialized: true,
        disabledg: ['google', 'facebook', 'twitter', 'douban', 'linkedin', 'qzone'] // 禁用的站点
    };
    var assignConfig = Object.assign($config, obj);
    socialShare('.social-share-cs', assignConfig);
}

function checkcodeRefesh() {
    setTimeout(function () {
        var imagecode = $("#imagecode");
        if (imagecode.length > 0) {
            $("#imagecode").attr("src", "/image/index?r=" + Math.random());
        }
    }, 500);
}

function topNote(text) {
    var div = document.createElement("div");
    div.id = "top_note";
    div.className = "radius";
    div.innerHTML = text;
    document.body.appendChild(div);
    $("#txtTitle").blur();
    $(".btn_area_1 input").attr("disabled", true);
}
//插入代码
function getCodePlugin() {
    var codeArr1 = ["html", "objc", "javascript", "css", "php", "csharp", "cpp", "java", "python", "ruby", "vb", "delphi", "sql", "plain"];
    var codeArr2 = ["HTML/XML", "Objective-C", "JavaScript", "CSS", "PHP", "C#", "C++", "Java", "Python", "Ruby", "Visual Basic", "Delphi", "SQL", "其它"];
    var opts = '';
    for (var i = 0; i < codeArr1.length; i++) {
        opts += csdn.format('<option value="{0}">{1}</option>', codeArr1[i], codeArr2[i]);
    }
    var htmlCode = '<div>编程语言: <select id="xheCodeType">' + opts + '</select></div>' + '<div><textarea id="xheCodeCon" rows=6 cols=40></textarea></div>' + '<div style="text-align:right;"><input type="button" id="xheSave" value="确定" /></div>';
    var htmlSCode = '<div><div><a href="javascript:;" class="quote_code">引用我的代码片</a><a href="https://code.csdn.net/snippets_manage" class="trim_code" target="_blank">整理我的代码片</a></div><textarea id="xheSCodeCon" rows=6 cols=40></textarea></div>' + '<div style="text-align:right;"><a href="https://code.csdn.net/help/CSDN_Code/code_support/FAQ_6_1" style="float:left;" target=_blank>什么是CODE代码片？</a><input type="button" id="xheSSave" value="确定" /></div>';

    var codePlugin = {
        Code: {
            c: 'Code',
            t: '插入代码',
            h: 1,
            e: function e() {
                var _this = this;
                var jTest = $(htmlCode);
                var jSave = $('#xheSave', jTest);
                jSave.click(function () {
                    var sel_code = $("#xheCodeType").val();
                    //var str = csdn.format('<pre name="code" class="{0}">{1}</pre><br />', sel_code, _this.domEncode($("#xheCodeCon").val()));
                    var xheCodeConContent = $("#xheCodeCon").val() + "";
                    xheCodeConContent = xheCodeConContent.replace(/&reg/g, "&amp;reg").replace(/&copy/g, "&amp;copy");
                    var pNode = _this.getParent('p');
                    var str = '<pre name="code" class="' + sel_code + '">' + _this.domEncode(xheCodeConContent) + '</pre><br />';
                    _this.loadBookmark();
                    if (pNode.length > 0) {
                        pNode.after(str);
                        if (!pNode.text().length > 0) {
                            pNode.remove();
                        }
                    } else {
                        _this.pasteHTML(str);
                    }
                    _this.hidePanel();
                    document.cookie = "postedit_code=" + sel_code + "; expires=" + function () {
                        var d = new Date();
                        d.setFullYear(d.getFullYear() + 1);
                        return d.toGMTString();
                    }();
                    return false;
                });
                _this.saveBookmark();
                _this.showDialog(jTest);
                var _his_code = document.cookie.match(new RegExp("(^|\s)postedit_code=([^;]*)(;|$)"));
                if (_his_code) $('#xheCodeType').val(_his_code);else $("#xheCodeType option")[0].selected = true;
            }
        },
        ToMarkdown: {
            c: 'ToMarkdown',
            t: '切换Markdown编辑器',
            i: function i() {},
            e: function e() {
                var _this = $(this);
                openSwitchMdMode();
            }
        },
        CsdnFullScreen: {
            c: 'CsdnFullScreen',
            t: '切换全屏',
            e: function e() {
                var _thisBtn = $("#xhe0_Tool").find("a[cmd='CsdnFullScreen']");
                var contentBody = $("#content-body");
                if (!_thisBtn.hasClass("xheActive")) {
                    _thisBtn.addClass("xheActive");
                    $("body").addClass("ed_fullscreen");
                    $("div.suspension-edit-box").removeClass("d-none");
                } else {
                    _thisBtn.removeClass("xheActive");
                    $("body").removeClass("ed_fullscreen");
                    $("div.suspension-edit-box").addClass("d-none");
                }
            }
        }
    };
    //codePlugin.SCode.showPop();
    return codePlugin;
}
var showConfirm = true;

//发布
function publish(isPubToBole) {
    try {
        window.csdn.userLogin.loadAjax(function (res) {
            save(1, isPubToBole, false);
        });
    } catch (err) {
        save(1, isPubToBole, false);
    }
}
//保存草稿
function draft() {
    try {
        window.csdn.userLogin.loadAjax(function (res) {
            save(0, false, false);
            checkcodeRefesh();
        });
    } catch (err) {
        save(0, false, false);
        checkcodeRefesh();
    }
}
var saveInter = null;
var saving = false; /*标识文章正在保存*/
function save(isPub, isPubToBole) {
    if (csdn.doing) {
        /*有其它操作（如保存草稿），等其完成再保存*/
        setTimeout("save(" + isPub + "," + isPubToBole + ")", 500);
        return;
    }
    notice.loading(true, "文章正在保存，请耐心等待。");

    if (!checkForm(isPubToBole)) return;

    notice.loading(true, "文章正在保存，请耐心等待。");

    if (isPub) {
        /*发布后停止自动保存*/
        if (saveInter) clearInterval(saveInter);
        saveInter = null;
    } else if (saveInter) {
        /*如果是立即保存，重置定时器，避免同时保存2遍*/
        clearInterval(saveInter);
        saveInter = setInterval("autoSave()", 30 * 1000);
    }

    var data = getPostData();

    var newStr = data.cont.replace(/<[^>]+>/g, "");
    if (data.typ === "1" && newStr.length > 2000) {
        $('.manage_article_original_plan').removeClass("manage_article_original_planShow");
    } else {
        $('.manage_article_original_plan').addClass("manage_article_original_planShow");
    }
    data.stat = isPub ? "publish" : "draft";
    data.not_auto_saved = '1';
    saving = true;
    // $("div.alert-mask").removeClass("d-none");
    var link = '/postedit/saveArticle';
    if (isPub) {
        link += "?isPub=1";
    }
    // link += "&joinblogcontest=" + $("#joinblogcontest").attr("checked");
    // link += "&r=" + Math.random();
    var title = data.titl;
    if ($("#summaryCon").val() || $("#txtSammary").val()) {
        $("#alertSuccess").find("p.zhaiyao").hide();
        $("#alertFaildCheckOrigin").find("p.zhaiyao").hide();
    } else {
        $("#alertSuccess").find("p.zhaiyao").show();
        $("#alertFaildCheckOrigin").find("p.zhaiyao").show();
    }
    $.ajax({
        type: 'POST',
        url: link,
        data: data,
        timeout: 5000,
        success: function success(ret) {
            saving = false;
            ret = csdn.toJSON(ret);
            if (ret.result == 0) {
                //$("div.alert-mask").addClass("d-none");
                //$('.html-editor-box').show();
                notice.error(ret.content);
                csdn.csdnreport.requestError(ret, ret.content);
            } else {
                $('.html-editor-box').show();
                showConfirm = false;
                add_article_originalId = ret.data.article_id;
                if (!isPub) {
                    artId = ret.data.article_id;
                    notice.success(csdn.format("文章已保存{0} {1}", jsonData.articleId == '0' ? "为草稿" : "", new Date().format("hh:mm:ss")));
                    $("#autosave_note").html('');
                } else {
                    saving = true; //保存后避免再次保存
                    var shareObj = {
                        title: ret.data.title,
                        url: ret.data.url,
                        source: '',
                        image: '',
                        description: ret.data.description
                    };
                    setShare(shareObj);
                    window.csdn.create_app_qr(ret.data);
                    shareData.article = ret.data.article_id ? ret.data.article_id : 0;
                    if (ret.data.check_original_status === 'false') {
                        $("#alertFaildCheckOrigin").find("a.toarticle").attr("href", ret.data.url).end().find("div.title").text(title).end().show();
                        $('#alertFaildCheckOrigin').find('.title').text(ret.data.title);
                        $('#alertFaildCheckOrigin').find('.desc').text(ret.data.description);
                        var url = document.location.origin + '/appeal/' + ret.data.article_id;
                        $('#alertFaildCheckOrigin').find('.btn-appeal-original').attr('href', url);
                        artId = ret.data.article_id;
                        var pathName = document.location.pathname.split('/')[1];
                        var curUrl = '/' + pathName + '/' + artId;
                        window.history.pushState(null, null, curUrl);
                        notice.error('文章发布失败');
                    } else {
                        $("#alertSuccess").find("a.toarticle").attr("href", ret.data.url).end().find("div.title").text(title).end().show();
                        $('#alertSuccess').find('.title').text(ret.data.title);
                        $('#alertSuccess').find('.desc').text(ret.data.description);
                        notice.success('文章发布成功');
                    }
                    $('#moreDiv').hide();
                    if (jsonData.articleId == 0 && ret.data.check_original_status !== 'false') {
                        /*如果不是编辑 并且 原创审核通过*/
                        $("#txtTitle").val('');
                        $("#editor").val('');
                    }

                    var url = blog_address + 'common_tool/qrcode?url=' + encodeURIComponent($('.toarticle')[0].href + "?utm_source=blog_wap_share");
                    $(".qr-img").attr('src', url);
                }
            }
        },
        error: function error(ret) {
            saving = false;
            notice.error('保存失败，请稍后重试');
            window.csdn.csdnreport.requestError(ret, '保存失败，请稍后重试');
        }
    });
}
var old_con = null;

function autoSave() {
    if (csdn.doing || saving) return;
    // var con = csdn.val2("editor");
    var con = CKEDITOR.instances.editor.getData();
    if (con.replace(/<.+?>/g, "").length < 100) return;
    // 清除未转存成功、未转存失败内容
    var replaceConRg = /<span class=\"img-upload-box\"(.*?)>((.|\n)*?)<\/span><\/span><\/span><img alt=\"\" class=\"has\"(.*?)\/>/ig;
    con = con.replace(replaceConRg, '&nbsp;');

    if (con == old_con) return;

    old_con = con;
    csdn.doing = true;
    var data = getPostData();
    data.stat = 'draft';
    data.not_auto_saved = '0';

    $.ajax({
        type: 'POST',
        url: '/postedit/saveArticle',
        data: data,
        timeout: 5000,
        success: function success(ret) {
            csdn.doing = false;
            ret = csdn.toJSON(ret);
            if (ret.result == 1) {
                artId = ret.data.article_id;
                showConfirm = false;
                notice.success("文章已自动保存为草稿 " + new Date().format("hh:mm:ss"));
                //$("#autosave_note").html("文章已自动保存为草稿 " + (new Date()).format("hh:mm:ss"));
                //showAutoSaveTip("文章已自动保存为草稿 " + (new Date()).format("hh:mm:ss"));
            } else {
                    /*showErr("文章自动保存失败，请注意保存。");*/
                }
        },
        error: function error(ret) {
            csdn.doing = false;
            csdn.csdnreport.requestError(ret, '自动保存失败');
        }
    });
}

function getPostData() {
    var type = $("#selType").val();
    var resourceUrl = $("#resourceInput").val();
    var titl = csdn.val("txtTitle");
    var cont = CKEDITOR.instances.editor.getData();
    var categories = csdn.val("hidCategories");
    var leve = 0;
    var Description = $('#summaryCon').val();
    var tag2 = $('#hidTags').val();

    var replaceConRg = /<span class=\"img-upload-box\"(.*?)>((.|\n)*?)<\/span><\/span><\/span><img alt=\"\" class=\"has\"(.*?)\/>/ig;
    cont = cont.replace(replaceConRg, '&nbsp;');
    var authorized_status = $("input[name='origin-link']").is(":checked") ? true : false;
    var original_link = $("#articleInput").val();
    return {
        titl: titl,
        typ: type,
        resourceUrl: resourceUrl,
        cont: cont,
        categories: categories,
        level: leve,
        tag2: tag2,
        artid: artId,
        readtype: $(':radio:checked').val(),
        Description: Description,
        authorized_status: authorized_status,
        original_link: original_link
    };
}

function cancelSave() {
    location = "/postlist";
}
function agreeChecked() {
    $(".notice-check i").bind('click', function () {
        var isChecked = $(this).parent().find("input");
        if (!isChecked.is(':checked')) {
            isChecked.prop('checked', true);
        } else {
            isChecked.prop('checked', false);
        }
    });
}agreeChecked();
function checkForm(isPubToBole) {
    var reg = /^https\:\/\/download.csdn.net\/download\/(\w)+\/(\d)+/;
    var regArticleUrl = /^([http|https]+:\/\/)?([\w-]+\.)+[\w-]+.*$/i;
    var resourceUrl = $("#resourceInput").val();
    if (!reg.test(resourceUrl) && resourceUrl !== '') {
        notice.error("请输入正确资源链接");
        $("#resourceInput").val('');
        return false;
    }
    if (isPubToBole && $("#selType").val() == '0') {
        notice.error("请选择文章类型");
        return false;
    } else if (isPubToBole && $("#selType").val() == '2') {
        if ($("#articleInput").val() === '') {
            notice.error("请填写原文链接");
            return false;
        }
        if ($("#articleInput").val() !== '' && !regArticleUrl.test($("#articleInput").val())) {
            $("#articleInput").val('');
            notice.error("请填写正确格式原文链接");
            return false;
        }
        if (!$("input[name='origin-link']").is(":checked")) {
            notice.error("请勾选转载已经获得原文作者授权");
            return false;
        }
    } else if (isPubToBole && $("#selType").val() == '4') {
        if (!regArticleUrl.test($("#articleInput").val()) && $("#articleInput").val() !== '') {
            $("#articleInput").val('');
            notice.error("请填写正确格式原文链接");
            return false;
        }
        if (!$("input[name='origin-link']").is(":checked")) {
            notice.error("请勾选翻译已经获得原文作者授权");
            return false;
        }
    }
    if (!csdn.hasVal("txtTitle")) {
        notice.error("请输入文章标题。");
        return false;
    }
    var con = CKEDITOR.instances.editor.getData();

    if (!$.trim(con)) {
        notice.error("请输入文章内容。");
        return false;
    }
    var reCon = /<span class=\"img-upload-box\"(.*?)>((.|\n)*?)<\/span><\/span><\/span>/ig;
    if (reCon.test(con)) {
        $('div.alert-mask').removeClass('d-none');
        $("#imgUploadFaildMode").removeClass('d-none');
        return false;
    }
    return true;
}

function cancel() {
    $('#warn-box').addClass('d-none');
    $('div.alert-mask').addClass('d-none');
}
/*end*/
function decodeURIComponent(txt) {
    var result = '';
    try {
        result = decodeURIComponent(txt);
    } catch (error) {
        result = unescape(txt);
    }
    return result;
}
function edit_init() {
    if (jsonData.articleId == '0' || jsonData.isDraft) {
        /*自动保存策略：
        1、修改文章不自动保存（修改草稿自动保存）；
        2、点击发布按钮后不自动保存；
        3、文章内容字数小于100不自动保存；
        4、自动保存后离开页面不弹出提示；
        */
        saveInter = setInterval("autoSave()", 30 * 1000);
        $("#txtTitle").focus();
    }
    if (jsonData.articleId != '0') {
        $("#txtTitle").focus().val(decodeURIComponent(jsonData.title));
        $("#selType").val(jsonData.type);
        $("#hidCategories").val(decodeURIComponent(jsonData.tags));
        $("#hidTags").val(decodeURIComponent(jsonData.tag2));
        formatTag2();
        //$("#txtFileName").val(jsonData.fileName);
        //$("input[name=radComment][value=" + jsonData.comment + "]").attr("checked", true);
        if (jsonData.tag2.length > 0) {
            var tags = decodeURIComponent(jsonData.tag2).split(',');
            var tagHtml = "";
            for (var i = 0; i < tags.length; i++) {
                tagHtml += '<div class="tag"><span class="name uneditable" contenteditable="false">' + tags[i] + '</span><i class="xheIcon icon-guanbi"><?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1535953077191" class="icon" style="" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3356" xmlns:xlink="http://www.w3.org/1999/xlink" width="12" height="12"><defs><style type="text/css"></style></defs><path d="M896 0L512 384 128 0 0 128l384 384L0 896l128 128 384-384 384 384 128-128-384-384 384-384z" p-id="3357"></path></svg></i></i></div>';
            }
            $("#addTag").before(tagHtml);
            if (tags.length >= 5) {
                $("#addTag").prop('disabled', true);
            }
        }
        if (jsonData.tags.length > 0) {
            myTag.loadTags(decodeURIComponent(jsonData.tags));
        }
    }
}
/*==tag start==*/

/*根据输入的tags重置选择框状态*/
function resetChks() {
    var arr = $("#txtTag").val().toLowerCase().split(/[,，]+/g);
    $("#tagbox input").each(function () {
        var has = false;
        var val = $(this).next().text().toLowerCase();
        for (var i = 0; i < arr.length; i++) {
            if (arr[i] == val) {
                has = true;
                break;
            }
        }
        this.checked = has;
    });
}
var valArray = ['', '', ''];

function getCurrVal(obj) {
    valArray[1] = '';
    var leftVal = getLeftText(obj);
    if (!leftVal) return "";
    var lastChar = leftVal.substr(leftVal.length - 1, 1);
    if (isSplit(lastChar)) return "";
    var allVal = obj.value;
    var i;
    for (i = leftVal.length - 1; i >= -1; i--) {
        if (i > -1 && isSplit(leftVal.substr(i, 1))) break;
    }
    if (i < -1) i = -1;
    valArray[1] = leftVal.substr(i + 1).trimStart();
    valArray[0] = leftVal.substr(0, i + 1);
    for (i = leftVal.length; i <= allVal.length; i++) {
        if (i < allVal.length && isSplit(allVal.substr(i, 1))) break;
    }
    valArray[2] = allVal.substr(i, allVal.length - i);

    return valArray[1];
}

function isSplit(c) {
    return c == ',' || c == '，';
}

function getLeftText(obj) {
    if (obj.selectionStart || obj.selectionStart == 0) {
        var idx = obj.selectionStart;
        return obj.value.substr(0, idx);
    }
    var rngSel = document.selection.createRange();
    var flag = rngSel.getBookmark();
    var rngTxt = obj.createTextRange();
    rngTxt.collapse();
    rngTxt.moveToBookmark(flag);
    rngTxt.moveStart('character', -obj.value.length);
    return rngTxt.text;
}

function setCurrVal(val) {
    if (!valArray[1] || !val) return;
    $("#txtTag").val(valArray[0] + val + valArray[2]);
}

function showAllTags(e) {
    if (e.innerHTML == "[全部]") {
        if ($("#tagbox").css("position") != "absolute") {
            var pos = $("#tagbox").position();
            $("#tagbox").css({
                position: "absolute",
                left: pos.left + "px",
                top: pos.top + 2 + "px"
            });
        }
        $("#tagtb tbody").show();
        e.innerHTML = "[收起]";
    } else {
        $("#tagtb tbody").hide();
        e.innerHTML = "[全部]";
    }
    e.blur();
}

function getAsc(str) {
    return str.charCodeAt(0);
}

function getcookie(name) {
    var cookie_start = document.cookie.indexOf(name);
    var cookie_end = document.cookie.indexOf(";", cookie_start);
    return cookie_start == -1 ? '' : unescape(document.cookie.substring(cookie_start + name.length + 1, cookie_end > cookie_start ? cookie_end : document.cookie.length));
}

/*==tag end==*/

/*==tag2 begin==*/

$(function () {
    $('#txtTag2').focus(showTag2).blur(formatTag2).keydown(tagKeydown);
    $('#txtTag2,#tag2box').mouseover(function () {
        window.overtag2 = true;
    }).mouseout(function () {
        window.overtag2 = false;
    });
    $(document.body).click(function (ev) {
        if (window.overtag2) return;
        $('#tag2box').hide();
    });
});
var old_con_len = 0;

function showTag2() {
    if ($('#tag2box a').length > 0) {
        $('#tag2box').show();
    }
}

function tagKeydown(ev) {
    var code = ev ? ev.which : event.keyCode;
    if (code == 8) {
        //如果是退格键
        var ss = $('#d_tag2 span');
        if (ss.length > 0 && $("#txtTag2").val().length == 0) {
            ss.eq(ss.length - 1).remove();
            formatTag2();
        }
    }
}

function formatTag2() {
    if ($('#txtTag2').val()) {
        var tt = '';
        $('#d_tag2 span').each(function () {
            tt += this.innerHTML + ',';
        });
        tt += $('#txtTag2').val().trim(',').replace(/[^\u4e00-\u9fa5\w\s\-+.#,，]+/g, '');
        tt = tt.trim(',').split(/[,，]+/g);
        var s = [];
        for (var i = 0; i < tt.length; i++) {
            if (!s.has(tt[i])) {
                s.push(tt[i].trim().slice(0, 20));
            }
            if (s.length == 5) break;
        }
        var str = '';
        for (var i = 0; i < s.length; i++) {
            str += '<span>' + s[i] + '</span>';
        }
        $('#d_tag2').html(str);
        $('#d_tag2 span').click(function () {
            $(this).remove();
            formatTag2();
        }).attr('title', '单击删除该标签');
    }
    var w = $('#d_tag2').width();
    $('#txtTag2').val('').css({
        'padding-left': w + 2,
        'width': 576 - w
    });
    activeTag2();
}
/*高亮预选标签中被选中的标签*/
function activeTag2() {
    var tags = [];
    $('#d_tag2 span').each(function () {
        tags.push(this.innerHTML);
    });
    $('#td_tag21>a,#td_tag22>a').each(function () {
        if (tags.has(this.innerHTML)) {
            this.className = 'act';
        } else {
            this.className = '';
        }
    });
}

Array.prototype.has = function (a) {
    for (var i = 0; i < this.length; i++) {
        if (this[i].toLowerCase() == a.toLowerCase()) return true;
    }
    return false;
};
/*对tag进行去重排序*/
function unique_sort(arr) {
    arr.sort();
    var res = [[arr[0], 1]];
    for (var i = 1; i < arr.length; i++) {
        if (arr[i] != res[res.length - 1][0]) {
            res.push([arr[i], 1]);
        } else {
            res[res.length - 1][1]++;
        }
    }
    res.sort(function (a, b) {
        return a[1] < b[1];
    });
    var aa = new Array();
    for (var i = 0; i < res.length; i++) {
        aa.push(res[i][0]);
    }
    return aa;
}
/*==tag2 end==*/

//操作提示(loadElement:是否动态加载div;isspoof:是否吃豆豆)
function noticeAlert(loadElement, isspoof) {
    var noticeBox = $(".notice-box"),
        icon = noticeBox.find("i.notice-icon"),
        pacman = isspoof ? noticeBox.find("div.pacman") : null,
        _this = this,
        _isspoof = isspoof,
        maskTrans = null;
    if (loadElement && !noticeBox.length) {
        if (isspoof) {
            noticeBox = $('<div class="notice-box"><i class= "mr8 notice-icon type-success"></i><div class="pacman hide"><div></div><div></div><div></div><div></div><div></div></div><span class="notice">文章发布成功</span></div >');
        } else {
            noticeBox = $('<div class="notice-box"><i class="mr8 notice-icon" style="display: none;"></i><span class="notice">文章发布成功</span></div>');
        }
        $("body").append(noticeBox);
        icon = noticeBox.find("i.notice-icon");
        pacman = isspoof ? noticeBox.find("div.pacman") : null;
    }
    var setTxt = function setTxt(txt) {
        if (txt) {
            noticeBox.find("span.notice").text(txt);
        }
    };
    this.success = function (txt) {
        pacman.addClass('hide');
        icon.removeClass("type-error type-loading").addClass("type-success").show();
        setTxt(txt);
        _this.show();
    };
    this.error = function (txt) {
        pacman.addClass('hide');
        icon.removeClass("type-success type-loading").addClass("type-error").show();
        setTxt(txt);
        _this.show();
    };
    this.loading = function (ismask, txt) {
        //ismask:是否增加透明遮罩组织用户继续操作
        if (ismask) {
            maskTrans = $("<div class='mask-trans'></div>");
            $("body").append(maskTrans);
        }
        if (!txt || typeof txt !== "string") {
            txt = "正在加载中请等待";
        }
        if (_isspoof) {
            icon.hide();
            pacman.removeClass('hide');
        } else {
            pacman.addClass('hide');
            icon.removeClass("type-success type-error").addClass("type-loading").show();
        }
        setTxt(txt);
        _this.show(false);
        var hideLoad = function hideLoad() {
            _this.hide();
        };
        return hideLoad; //返回隐藏方法
    };
    //自动显隐
    this.show = function (autohide) {
        noticeBox.show().animate({
            bottom: '56px'
        }, {
            duration: 200,
            done: function done() {
                if (autohide === undefined || autohide) {
                    setTimeout(function () {
                        var mask = $("div.mask-trans");
                        if (mask.length > 0 !== null) {
                            mask.remove();
                        }
                        noticeBox.fadeOut(500);
                    }, 1500);
                }
            }
        });
    };
    this.hide = function () {
        noticeBox.stop().fadeOut(500, function () {
            noticeBox.css({
                bottom: '-56px'
            });
        });
        $("div.mask-trans").remove();
    };
}

//自定义分类
var chkCategories = $("div.categorie-list").find(":checkbox");
var chkCatStrs = chkCategories.map(function () {
    return $(this).val();
}).get();
var articleTag = new AutoTag({
    tagBox: $("#articleTagBox"), //标签层
    iptTags: $("#hidTags"), //标签集合隐藏域
    addBtn: $("#addTag"), //触发增加标签button
    maxTagLen: 5,
    isEditorble: true
});
var myTag = new AutoTag({
    tagBox: $("#categorieBox"), //标签层
    iptTags: $("#hidCategories"), //标签集合隐藏域
    addBtn: $("#addCategorie"), //触发增加标签button
    maxTagLen: 3,
    isEditorble: false,
    funAfterEditor: function funAfterEditor(obj, val) {
        var curChk = null,
            tagIdx = chkCatStrs.findIndex(function (ele) {
            return ele === val;
        });
        if (tagIdx > -1) {
            chkCategories.map(function () {
                if ($(this).val().toLowerCase() === val.toLowerCase()) {
                    curChk = $(this);
                }
            });
            curChk.prop('checked', true);
            chkCatgCancle(curChk, obj);
        }
        limitCount();
    },
    funAfterDel: function funAfterDel(val) {
        chkCategories.filter('[value="' + val + '"]').prop('checked', false);
        limitCount();
    }
});

function limitCount() {
    var regCount = max_classify_and_column_num;
    var listCount = $(".categorie-list").find("div.form-check").length;
    var tagCount = $("#categorieBox").find("div.tag").length;
    var listCheckCount = $(".categorie-list .form-check").find('input[type="checkbox"]:checked').length;
    var sumCount = listCount + tagCount - listCheckCount;
    if (listCount > regCount || sumCount >= regCount || tagCount >= 3) {
        $("#addCategorie").prop("disabled", true);
    } else {
        $("#addCategorie").prop("disabled", false);
    }
}

//先有标签选中或取消选择
chkCategories.change(function () {
    if ($(this).is(':checked')) {
        var txt = $(this).val();
        var curTag = myTag.addTag(txt);
        if (!curTag) {
            $(this).prop('checked', false);
        } else {
            chkCatgCancle($(this), curTag);
        }
    }
});

function chkCatgCancle(chkObj, curTag) {
    chkObj.bind('click', function () {
        if (!$(this).is(':checked')) {
            curTag.find('i.icon-guanbi').trigger('click');
            //curTag.remove();
            $(this).unbind('click');
        }
    });
}

//修复 鼠标移出编辑器失焦问题 问题main-1.0.5.js绑定了iframe失焦
(function ($) {
    setTimeout(function () {
        $("#focus_retriever").remove();
    }, 500);
})(jQuery);

//页面代码迁移
//切换markdown提示
function colseSwitchMdMode() {
    alertMask.addClass("d-none");
    switchMdMode.addClass("d-none");
}
function colseImgUploadFaildMode() {
    notice.hide();
    alertMask.addClass("d-none");
    $("#imgUploadFaildMode").addClass("d-none");
}
function openSwitchMdMode() {
    alertMask.removeClass("d-none");
    switchMdMode.removeClass("d-none");
}
switchMdMode.find("i.icon-guanbi,button.btn-cancel,a.btn-confirm").click(function () {
    colseSwitchMdMode();
});
$("#imgUploadFaildMode").find("i.icon-guanbi,button.btn-cancel").click(function () {
    colseImgUploadFaildMode();
});
function fullOpenMoreDiv() {
    alertMask.removeClass("d-none");
    moreDiv.show();
}
function fullCloseMoreDiv() {
    alertMask.addClass("d-none");
    moreDiv.removeAttr("style");
}

$('body').on('click', ".btn-fabu", function () {
    var title = csdn.val2("txtTitle");
    var content = encodeURIComponent(CKEDITOR.instances.editor.getData());
    if (!title) {
        notice.error("文章标题不能为空。");
    } else if (!content) {
        notice.error("文章内容不能为空。");
    } else {
        fullOpenMoreDiv();
    }
});
moreDiv.find("#btnDraftFull").click(function () {
    fullCloseMoreDiv();
});
moreDiv.find(".btn-close").click(function () {
    fullCloseMoreDiv();
});

$(function () {
    /**
    * http://jira.csdn.net/browse/CSDNBLOG-7676
    * @author liuhe
    * @anotherdate 2019-03-01T11:48:32+080
    */
    $("#txtTitle").bind('input porpertychange', function (e) {
        max_lengthSet($(this).val().length);
    });
    function max_lengthSet(unm) {
        $('.max-length-change').text(unm).addClass(unm === 100 ? 'toMax' : '').removeClass(unm < 100 ? 'toMax' : '');
    }
    max_lengthSet($("#txtTitle").val().length);
});

$(function () {
    function copyText(dom, attr, callback) {
        var target = null;

        if (attr) {
            target = document.createElement('div');
            target.id = 'tempTarget';
            target.style.opacity = '0';
            if (dom) {
                target.innerText = dom[attr];
            } else {
                target.innerText = attr;
            }
            document.body.appendChild(target);
        } else {
            target = dom;
        }

        try {
            var range = document.createRange();
            range.selectNode(target);
            window.getSelection().removeAllRanges();
            window.getSelection().addRange(range);
            document.execCommand('copy');
            window.getSelection().removeAllRanges();
            callback(dom);
        } catch (e) {
            // console.log('复制失败')
        }

        if (attr) {
            // remove temp target
            target.parentElement.removeChild(target);
        }
    }
    function copycallback(dom) {
        $('.copy-prompt').addClass('copy-prompt-show-ani').delay(3000).slideUp(500, function () {
            $(this).removeClass('copy-prompt-show-ani').show();
        });
    }
    function addOriginal(text) {
        $('.copy-prompt').text(text).addClass('copy-prompt-show-ani').delay(3000).slideUp(500, function () {
            $(this).removeClass('copy-prompt-show-ani').show().text("文章链接已复制");
        });
    }
    $(document).on('click', '.btn-reedit', function (e) {
        $("#alertFaildCheckOrigin").hide();
        $('#moreDiv').show();
        e.preventDefault ? e.preventDefault() : window.event.returnValue == false;
    });
    $(document).on('click', '.copy-btn', function (e) {
        var toarticle = $(this).parents(".finished-box").find(".toarticle");
        copyText(toarticle[0], 'href', copycallback);
        e.preventDefault ? e.preventDefault() : window.event.returnValue == false;
    });
    var addOriginalOnOff = false;
    //文章大于2000字原创文章可以添加原创计划；
    $(document).on('click', '#manage_article_original_plan', function (e) {
        //addOriginal("您已成功参加原力计划");
        if (!addOriginalOnOff) {
            $.ajax({
                url: blog_address + 'pheapi/recommend/recommendArticle',
                dataType: 'json',
                type: 'POST',
                xhrFields: {
                    withCredentials: true
                },
                data: {
                    article_id: add_article_originalId
                },
                success: function success(json) {
                    if (json.status) {
                        $('#manage_article_original_plan').attr("checked", true);
                        addOriginal("您已成功参加原力计划");
                        addOriginalOnOff = true;
                    } else {
                        $('#manage_article_original_plan').attr("checked", false);
                        addOriginal(json.msg);
                    }
                },
                error: function error(json) {
                    $('#manage_article_original_plan').attr("checked", false);
                }
            });
        } else {
            addOriginal('本计划不支持取消！');
        }
    });
    $(document).on('click', '.btn-appeal-original', function (e) {
        copyText($('.toarticle')[0], 'href', copycallback);
        var url = $(this).attr('href');
        setTimeout(function () {
            window.open(url, '_blank');
        }, 2000);
        e.preventDefault ? e.preventDefault() : window.event.returnValue == false;
    });
    $(document).on('click', '.share-wechat-btn', function (e) {
        e.preventDefault ? e.preventDefault() : window.event.returnValue == false;
        if ($('.position-share-box').length > 0) {
            $('.position-share-box').toggle(0, function (e) {
                if ($('.position-share-box').is(":visible")) {
                    $('.share-wechat-btn .text').text('收起二维码');
                } else {
                    $('.share-wechat-btn .text').text('分享到微信');
                }
            });
        } else {
            var url = blog_address + 'common_tool/qrcode?url=' + encodeURIComponent($('.toarticle')[0].href + "?utm_source=blog_wap_share");
            var template = '<div class="position-share-box">' + '<img class="" src=${url}>' + '</div>';
            $('.share-wechat-btn').append(template).find('.text').text('收起二维码');
        }
    });

    var share_card_url = false;
    var loadStr = '<div class="loading">' + '<svg class="icon icon-loading_C"><use xlink:href="#loading_C"></use></svg>' + '<div>卡片正在努力生产中…</div>' + '</div>';
    var create_card = true;
    $(document).on('click', '.share-card-btn', function (e) {
        e.preventDefault ? e.preventDefault() : window.event.returnValue == false;
        if (share_card_url) {
            $('.share-card-box').show();
            return true;
        }
        if (!create_card || $('.share-card-box').length > 0) {
            $('.share-card-box').show();
            recreate();
            return true;
        }
        var template = "<div class=\"share-card-box\">\n                    <div class=\"share-card-mask\"></div>\n                    <div class=\"share-card\">\n                      <div class=\"prompt-text\">\u4FDD\u5B58\u5361\u7247\u5206\u4EAB\u6211\u7684\u6700\u65B0\u6587\u7AE0~</div>\n                      <div class=\"share-card-close\" data-report-click='{\"mod\":\"popu_765\",\"strategy\":\"closeShareCard\"}'><svg class=\"icon icon-failure\"><use xlink:href=\"#failure\"></use></svg></div>\n                      <div class=\"content\">\n                      " + loadStr + "\n                      </div>\n                      <a class=\"btn  btn-outline-danger download-btn\" data-report-click='{\"mod\":\"popu_765\",\"strategy\":\"downloadShareCard\"}'><svg class=\"icon icon-download\"><use xlink:href=\"#download\"></use></svg>\u4FDD\u5B58\u5361\u7247</a>\n                    </div>\n                  </div>";
        $('body').append(template);
        geturl();
    });
    $(document).on('click', '.share-card-close', function () {
        $('.share-card-box').hide();
    });
    $(document).on('click', '.share-card-error-btn', recreate);

    function recreate() {
        $('.share-card').find('.content').html(loadStr);
        geturl();
    }
    function geturl() {
        if (shareData.article === 0) {
            notice.error('没有文章id');
            return false;
        };
        $.post(blog_address + getcookie('UserName') + '/article/interceptCard/' + shareData.article, { user: getcookie('UserName'), articleId: shareData.article, background_img_id: background_img_id }, function (data) {
            data = (typeof data === "undefined" ? "undefined" : _typeof(data)) === 'object' ? data : JSON.parse(data);
            if (data.url) {
                share_card_url = data.url;
                $('.share-card').find('.content').html("<img src=\"" + data.url + "\" />").parent().find('.download-btn').css({ display: 'inline-block' });
                change_share_card_width($('.share-card').find('.content'));
            } else {
                share_card_error();
                csdn.csdnreport.requestError(data, '生成分享卡片失败');
            }
        }).error(function (data) {
            share_card_error();
            csdn.csdnreport.requestError(data, '生成分享卡片失败');
        });
    }
    function change_share_card_width(dom) {
        var mixHeight = 800,
            windowHeight = $(window).height();
        if (windowHeight < mixHeight) {
            dom.css({ 'width': 376 - (mixHeight - windowHeight) / 1.8 });
        }
    }
    function share_card_error() {
        $('.share-card').find('.content').html(" \n        <div class=\"error\">\n            <svg class=\"icon icon-error\">\n                <use xlink:href=\"#error\"></use>\n            </svg>\n        <div>\u56FE\u7247\u751F\u6210\u5931\u8D25\u4E86\uFF0C\u6D77\u62A5\u5C0F\u54E5\u54E5\u5DF2\u7ECF\u8FC5\u901F\u8D76\u6765\u4E2D...</div>\n     </div>");
    }
    function forceDownload(url, fileName) {
        var xhr = new XMLHttpRequest();
        xhr.open("GET", url, true);
        xhr.responseType = "blob";
        xhr.onload = function (data) {
            var urlCreator = window.URL || window.webkitURL;
            var imageUrl = urlCreator.createObjectURL(this.response);
            var tag = document.createElement('a');
            tag.href = imageUrl;
            tag.download = fileName;
            document.body.appendChild(tag);
            tag.click();
            document.body.removeChild(tag);
        };
        xhr.send();
    }
    $(document).on('click', '.download-btn', function () {
        forceDownload($('.share-card .content img').attr('src'), 'csdn_share.png');
    });
    $('#outer').mouseover(function () {
        $('#log').append('<div>Handler for .mouseover() called.</div>');
    });
    // $(document).on('mouseenter', '.icon-wechat', function(e) {
    //     window.csdn.track.reportClick({
    //         mod: 'popu_765',
    //         con: ',,shareWechat',
    //     }, this)
    // })
});
//  app 分享二维码生成
$(function () {
    function real_url(obj) {
        return window.location.protocol + "//blog.csdn.net/" + getcookie('UserName') + "/article/details/" + obj.article_id;
    }
    function create_app_qr(obj) {
        var url = /\/\/blog.csdn.net\/[\w]+\/article\/details/g.test(obj.url) ? obj.url : real_url(obj);

        new QRCode(document.getElementById("app-qrcode-img"), {
            text: url + '#share',
            width: 120,
            height: 120,
            colorDark: "#000000",
            colorLight: "#ffffff",
            correctLevel: QRCode.CorrectLevel.H
        });
        var posterUrl = window.location.protocol + "//blog.csdn.net/" + getcookie('UserName') + "/article/shareArticleCardPage?article_id=" + obj.article_id + "&utm_source=po_post";
        new QRCode(document.getElementById("poster-qrcode-img"), {
            text: posterUrl,
            width: 130,
            height: 130,
            background: "#ffffff", //二维码的后景色
            foreground: "#000000", //二维码的前景色
            correctLevel: QRCode.CorrectLevel.H
        });
    }
    window.csdn ? window.csdn.create_app_qr = create_app_qr : window.csdn = { create_app_qr: create_app_qr };
});
// 审核未通过 提示
$(function () {
    function notPass() {
        var $modal = $('#exampleModal'),
            $modalTilte = $('#exampleModalLabel'),
            $modalText = $('#exampleModal .modal-body'),
            $mask = $('.alert-mask'),
            $nextBtn = $('.btn-primary');
        $closeBtn = $('#exampleModal .close');

        $modalTilte.text('审核未通过');
        $modalText.text(jsonData.reason);
        $mask.removeClass('d-none');
        $modal.show();
        function hide() {
            $modal.hide();
            $mask.addClass('d-none');
        }
        $nextBtn.click(hide);
        $closeBtn.click(hide);
    }

    if (articleStatus === '6') {
        notPass();
    }

    if (checkOriginal === '1') {
        notOriginal();
    }

    function notOriginal() {
        var $modal = $('#exampleModal'),
            $modalTilte = $('#exampleModalLabel'),
            $modalText = $('#exampleModal .modal-body'),
            $mask = $('.alert-mask'),
            $nextBtn = $('.btn-primary');
        $closeBtn = $('#exampleModal .close');

        $modalTilte.text('原创未通过审核');
        $modalText.text('非原创文章，请获得作者同意后，通过转载发表');
        $mask.removeClass('d-none');
        $modal.show();
        function hide() {
            $modal.hide();
            $mask.addClass('d-none');
        }
        $nextBtn.click(hide);
        $closeBtn.click(hide);
    }
});